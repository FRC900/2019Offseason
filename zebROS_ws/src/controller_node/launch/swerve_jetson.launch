<?xml version="1.0"?>
<launch>

	<!-- GDB functionality -->
	<arg name="debug" default="false" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

	<arg name="hw_or_sim" default="hw" />
	<arg name="static_map" default="True"/>

	<!-- Load example URDF 
	<param name="robot_description" command="$(find xacro)/xacro - -inorder '$(find ros_control_boilerplate)/urdf/base_trajectory.xacro'" />
	-->

        <machine name="roboRIO" address="10.9.0.2" env-loader="/home/admin/2019RobotCode/zebROS_ws/ROSJetsonMaster.sh" user="admin" password="admin"/>

	<node name="base_trajectory_node" pkg="base_trajectory" type="base_trajectory_node" output="screen" > </node> 
	<group ns="frcrobot">

		<!-- Load controller settings -->
		<rosparam file="$(find ros_control_boilerplate)/config/swerve_test.yaml" command="load"/>
                <rosparam file="$(find ros_control_boilerplate)/config/talon_swerve_offsets_new_1.yaml" command="load"/> <!-- not updated to offseason-->
		<rosparam file="$(find ros_control_boilerplate)/config/2018_offseason_swerve.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller.yaml" command="load"/>
                <rosparam file="$(find robot_visualizer)/config/robot_visualize.yaml" command="load"/>
                <rosparam file="$(find behaviors)/config/autoInterpreterServer.yaml" command="load"/>

		<!-- Load hardware interface -->
		<node machine="roboRIO" name="frcrobot_$(arg hw_or_sim)_interface" pkg="ros_control_boilerplate" type="frcrobot_$(arg hw_or_sim)_main"
			output="screen" launch-prefix="$(arg launch_prefix)">
		</node>

		<!-- Load controller manager -->
		<node machine="roboRIO" name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" args="spawn joint_state_controller talon_state_controller imu_sensor_controller pdp_state_controller robot_code_ready_controller arm_controller swerve_drive_controller intake_controller rumble_controller" />

		<node name="teleop_joystick_offseason" pkg="teleop_joystick_control" type="teleop_joystick_offseason" output="screen" />
                <node name="arm_server_node" pkg="behaviors" type="arm_server_node" output="screen"/>
                <node name="intake_server_node" pkg="behaviors" type="intake_server_node" output="screen"/>
                <node name="forearm_server_node" pkg="behaviors" type="forearm_server_node" output="screen"/>
        	
		<node name="point_gen" pkg="swerve_point_generator" type="point_gen" output="screen" />
	
		<node name="map_server" pkg="map_server" type="map_server" args="$(find controller_node)/maps/2018FRC_field.yaml" output="screen" if="$(arg static_map)">
			<param name="frame_id" value="/map"/>
		</node>

                <!-- <node name="robot_visualize" pkg="robot_visualizer" type="robot_visualize" output="screen" />-->
                <!-- <node name="profile_follow" pkg="robot_visualizer" type="profile_follow" output="screen" />-->
		
		<!-- Convert joint states to /tf tranforms -->
		<!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/-->
	</group>

    <group ns="rio">
        <node name="heartbeat_rio" pkg="heartbeat_node" type="heartbeat" output="screen" />
    </group>

    <group ns="jetson">
        <node name="heartbeat_jetson" pkg="heartbeat_node" type="heartbeat" output="screen" />
    </group>
        

</launch>
