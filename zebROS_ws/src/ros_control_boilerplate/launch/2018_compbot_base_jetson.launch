<?xml version="1.0"?>
<launch>

	<!-- GDB functionality -->
	<arg name="debug" default="false" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

	<arg name="hw_or_sim" default="hw" />
	<arg name="static_map" default="True"/>

	<group ns="frcrobot_jetson">
		<node name="base_trajectory_node" pkg="base_trajectory" type="base_trajectory_node" output="screen" > </node> 

		<!-- Load controller settings -->
		<rosparam file="$(find ros_control_boilerplate)/config/2018_compbot_base_jetson.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/talon_swerve_offsets_new_0.yaml" command="load"/>

		<rosparam file="$(find ros_control_boilerplate)/config/2019_swerve_drive.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller_jetson.yaml" command="load"/>
		<rosparam file="$(find robot_visualizer)/config/robot_visualize.yaml" command="load"/>
		<rosparam file="$(find behaviors)/config/autoInterpreterServer.yaml" command="load"/>

		<!-- Load hardware interface -->
		<node name="frcrobot_hardware_interface" pkg="ros_control_boilerplate" type="frcrobot_$(arg hw_or_sim)_main"
			output="screen" launch-prefix="$(arg launch_prefix)">
		</node>

		<!-- Load controller manager -->
		<node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
			output="screen" args="spawn cargo_outtake_controller cargo_intake_controller climber_controller panel_intake_controller elevator_controller joint_state_controller joint_state_listener_controller talon_state_controller match_state_listener_controller pdp_state_controller swerve_drive_controller robot_code_ready_controller" /> 
		<node name="point_gen" pkg="swerve_point_generator" type="point_gen" output="screen" />

		<node name="map_server" pkg="map_server" type="map_server" args="$(find controller_node)/maps/2018FRC_field.yaml" output="screen" if="$(arg static_map)">
			<param name="frame_id" value="/map"/>
		</node>

                <node name="path_to_goal_server" pkg="path_to_goal" type="path_to_goal_server" output="screen" />
                <node name="test_client" pkg="path_to_goal" type="test_client" output="screen" />
				<node name="path_follower" pkg="swerve_point_generator" type="path_follower" output="screen"/>

		<node name="heartbeat_jetson" pkg="heartbeat_node" type="heartbeat" output="screen" />

		<node name="teleop_joystick_comp" pkg="teleop_joystick_control" type="teleop_joystick_comp" output="screen" />
	</group>

</launch>
