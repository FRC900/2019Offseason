<?xml version="1.0"?>

<launch>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <arg name="world_name" value="$(find frcrobot_gazebo)/worlds/frcrobot.world"/>
    <!-- more default parameters can be changed here -->
  </include>
<!--
  <param name="field_description" command="$(find xacro)/xacro $(find field_description)/urdf/field2019_textured.urdf" />
  <node name="spawn_field_urdf" pkg="gazebo_ros" type="spawn_model" args="-z 0.001 -param field_description -urdf -model field" />
-->
<!--
  <param name="props_description" command="$(find xacro)/xacro $(find field_description)/urdf/field_props_2019.urdf" />
  <node name="props_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
    <remap from="robot_description" to="props_description" />
  </node>
  <node name="spawn_props_urdf" pkg="gazebo_ros" type="spawn_model" args="-z 0.0 -param props_description -urdf -model props" />
-->
  <group ns="frcrobot_jetson">
	  <param name="robot_description" command="$(find xacro)/xacro $(find frcrobot_description)/urdf/frcrobot.xacro" />
	  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

	  <rosparam file="$(find ros_control_boilerplate)/config/2019_compbot_base_jetson.yaml" command="load"/>
	  <rosparam file="$(find ros_control_boilerplate)/config/2019_swerve_drive.yaml" command="load"/>
	  <rosparam file="$(find ros_control_boilerplate)/config/2019_compbot_offsets.yaml" command="load"/>
	  <rosparam file="$(find ros_control_boilerplate)/config/2019_elevator_params.yaml" command="load"/>
	  <rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller_jetson.yaml" command="load"/>

	  <node name="spawn_robot_urdf" pkg="gazebo_ros" type="spawn_model" args="-z 0.5 -param robot_description -urdf -model robot" />

	  <node name="controller_spawner_jetson" pkg="controller_manager" type="controller_manager" respawn="false"
		  output="screen" args="spawn joint_state_controller_jetson joint_state_listener_controller_jetson talon_state_controller_jetson match_state_listener_controller_jetson swerve_drive_controller robot_code_ready_controller_jetson --shutdown-timeout 50" />
  </group>
  <!--
  <group ns="frcrobot_rio">
	  <rosparam file="$(find ros_control_boilerplate)/config/2019_compbot_base_rio.yaml" command="load"/>
	  <rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller_rio.yaml" command="load"/>

	  <node name="frcrobot_$(arg hw_or_sim)_interface" pkg="ros_control_boilerplate" type="frcrobot_$(arg hw_or_sim)_main"
		  output="screen" launch-prefix="$(arg launch_prefix)">
		  <remap if="$(eval arg('joy_or_key')=='key')" from="/frcrobot_rio/joystick_states_raw_key" to="/frcrobot_rio/joystick_states_raw"/>
	  </node>

	  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
		  output="screen" args="spawn joint_state_controller joint_state_listener_controller imu_sensor_controller match_state_controller navx_offset_controller robot_controller_state_controller robot_code_ready_controller" /> 
  </group>
  -->

	<include file="$(find controller_node)/launch/joysticks_sim.launch">
		<arg name="joy_or_key" value="joy"/>
	</include>

	<group ns="teleop">
		<rosparam file="$(find teleop_joystick_control)/config/teleop_joystick_comp.yaml" command="load"/>
		<node name="teleop_joystick_comp" pkg="teleop_joystick_control" type="teleop_joystick_comp" output="screen" >
			<remap from="navx_mxp" to="/frcrobot_rio/navx_mxp"/>
		</node>

		<group ns="translator0">
			<node name="translate_joystick_data_node" pkg="teleop_joystick_control" type="translate_joystick_data_node" output="screen"/>
		</group>

	</group>
	<group ns="cmd_vel_mux">
		<node name="twist_mux" pkg="twist_mux" type="twist_mux">
			<rosparam command="load" file="$(find talon_swerve_drive_controller)/config/twist_mux.yaml"/>
			<remap from="cmd_vel_out" to="/frcrobot_jetson/swerve_drive_controller/cmd_vel"/>
		</node> 
	</group>

</launch>
