{"version":3,"sources":["ros/context.js","ros/status.js","util/XYPlot.js","views/nav_msgs/Odometry.js","util/Subscription.js","util/useOnce.js","util/Line.js","util/TimeSeries.js","util/JoystickPlot.js","util/RotationPlot.js","util/fileList.js","util/HasPiece.js","util/ClimbSafe.js","util/BigNumber.js","util/BoardSelector.js","util/Service.js","util/ServiceCallGyro.js","util/ServiceCallClimb.js","util/Form.js","App.js","serviceWorker.js","index.js"],"names":["Context","client","ROSLIB","Ros","topics","subscribe","name","messageType","callback","_this","msg","Topic","ros","removeSubscription","unsubscribe","Object","ROSContext","React","createContext","ros_status","useContext","_useState","useState","_useState2","slicedToArray","isConnected","changeConnected","_useState3","_useState4","isConnecting","changeIsConnecting","_useState5","_useState6","address","changeAddress","react_default","a","createElement","onClick","console","log","close","concat","on","value","onChange","e","target","connect","XYPlot","_ref","_ref$data","data","_ref$x","x","el","_ref$y","y","_ref$color","color","_ref$opts","opts","xScale","scaleLinear","range","domain","extent","yScale","viewBox","stroke","d","line","style","Odometry","recent","length","renderMsg","Subscription","topic","type","children","_useList","useList","list","push","funcOnce","hasCalled","setCalled","error","setError","setData","_len","arguments","args","Array","_key","apply","useOnce","Children","map","child","cloneElement","Line","TimeSeries","_ref$size","size","slice","xWrap","i","JoyPlot","undefined","width","height","strokeWidth","fill","cx","cy","yWrap","r","RotationPlot","x0","y0","x1","Math","cos","y1","sin","axios","require","HasPiece","Component","_ref$sensor","sensor","ClimbSafe","BigNumber","_ref$number","number","VisBoard","Fragment","param","visType","className","util_Subscription","src_util_TimeSeries","util_Line","util_JoystickPlot","src_util_XYPlot","util_RotationPlot","src_util_HasPiece","util_ClimbSafe","util_BigNumber","Service","ServiceCallGyro","navFieldOrient","addTwoIntsClient","serviceType","request","ServiceRequest","callService","result","navConstantZero","navConstantNinety","robot_orient","offset_angle","setTimeout","ServiceCallClimb","Input","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","parseInt","preventDefault","onSubmit","PIDTuning","l","header","seq","set_point","position","closed_loop_error","Home","DriverStation","util_Service","util_ServiceCallGyro","util_ServiceCallClimb","BoardSelector","Test","Form","LiveRobot","leftStickX","leftStickY","rightStickX","rightStickY","pose","abs","speed","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","Link","to","get","then","catch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fae90e15.chunk.js","sourcesContent":["import React from 'react'\nimport ROSLIB, { Topic } from 'roslib'\n\n// This is the object that actually handles subscriptions\nclass Context extends Object {\n    client = new ROSLIB.Ros({})\n    topics = {}\n    subscribe = (name, messageType, callback) => {\n        // If we already have a subscription to this topic update the callback rather than subbing again\n        // Currently can't have two subscribers to same topic...\n        if (this.topics[name]) {\n            this.topics[name].subscribe((msg) => callback(msg))\n            return\n        }\n        this.topics[name] = new Topic({\n            ros: this.client,\n            name,\n            messageType\n        })\n        this.topics[name].subscribe((msg) => callback(msg))\n    }\n    removeSubscription = (name) => {\n        const topic = this.topics[name]\n        topic.unsubscribe()\n        delete this.topics[name]\n    }\n}\n\n\n// And this let's us expose it via `useContext`\nexport const ROSContext = React.createContext(\n    {\n        ros: new Context()\n    }\n);\n","import React, { useContext, useState } from 'react'\nimport { ROSContext } from './context'\n\n// This is just a gnarly mess of managing connection state\nexport default () => {\n    const {ros} = useContext(ROSContext)\n    const [isConnected, changeConnected] = useState(false)\n    const [isConnecting, changeIsConnecting] = useState(false)\n    const [address, changeAddress] = useState('ws://10.9.0.8:5803')\n    // const\n\n    if(isConnected) {\n        return <button onClick={() => {\n            console.log('discon')\n            ros.client.close()\n        }}>Disconnect from {address}</button>\n    }\n    if(isConnecting) {\n        console.log('connecting...')\n        return `Connecting to ${address}...`\n    }\n    ros.client.on('connection', () => {\n        changeIsConnecting(false)\n        changeConnected(true)\n    })\n\n    ros.client.on('close', () => {\n        changeIsConnecting(false)\n        changeConnected(false)\n    })\n\n    // ros.on('error', () => {\n    //     if(isConnected) {\n    //         changeConnected(false)\n    //     }\n    // })\n\n    const onAddressChange = (e) => {\n        changeAddress(e.target.value)\n    }\n\n    const onConnect = () => {\n        changeIsConnecting(true)\n        ros.client.connect(address)\n    }\n\n    return (\n        <div>\n            <input value={address} onChange={onAddressChange} />\n            <button onClick={onConnect} >Connect</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\n\nimport './XYPlot.css'\n\n\nconst XYPlot = ({\n        data = [],\n        x = el => el.x,\n        y= el => el.y,\n        color = 'black',\n        opts = {}\n    }) => {\n        const xScale = scaleLinear().range([0,400]).domain(extent(data, x))\n        const yScale = scaleLinear().range([100,0]).domain(extent(data, y))\n        const xWrap = (el) => xScale(x(el))\n        const yWrap = (el) => yScale(y(el))\n\n        return (\n            <svg viewBox={opts.viewBox || \"-10 -1 410 110\"}>\n                <path stroke='black' d={line().x(xWrap).y(yWrap)(data)} style={{stroke: color}}/>\n            </svg>\n        )\n}\n\nexport default XYPlot\n","import React from 'react'\nimport xyplot from '../../util/XYPlot'\nexport default ({data}) => {\n\n    // From here on out is just rendering the data.\n    // Optimally would be prettier than this, I'm just lazy\n    const recent = data[data.length - 1]\n    //const filteredData = data.filter(el => el.pose)\n    const renderMsg = () => {\n        if (recent){\n            console.log(data)\n            return (\n\n                <div>\n                </div>\n            )\n    }\n  }\n    return renderMsg() || \" No Data \"\n}\n","import React, { useContext } from 'react'\nimport { useList } from 'react-hooks-lib'\nimport { ROSContext } from '../ros/context'\nimport useOnce from './useOnce'\n\nconst Subscription = ({topic, type, children}) => {\n    const { ros } = useContext(ROSContext)\n    // This creates a list of datapoints\n    // list:data renames the list key to data\n    const { list: data, push } = useList()\n    if (topic) {\n        useOnce(() => {\n            ros.subscribe(topic, type, push)\n        })\n    }\n    return React.Children.map(children, child => {\n        return React.cloneElement(child, {data})\n    })\n\n}\n\nexport default Subscription\n","import { useState, useEffect } from 'react'\n\n\nexport default (funcOnce, ...args) => {\n    const [hasCalled, setCalled] = useState(false)\n    const [error, setError] = useState(null)\n    const [data, setData] = useState(null)\n    // We will call this ONCE\n    if(!hasCalled){\n        try {\n            setCalled(true)\n            setData(funcOnce(...args))\n        } catch (error) {\n            console.error(error)\n            // If it errors out we set the error object\n            setError(error)\n        }\n    }\n    return {\n        hasCalled,\n        error,\n        data\n    }   \n}","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\nconst Line = ({\n        data = [],\n        y = el => el.y,\n        color = 'black',\n        x\n    }) => {\n        const yScale = scaleLinear().range([0,100]).domain(extent(data, y))\n        const yWrap = (el) => yScale(y(el))\n        return (\n            <path style={{stroke: color}} d={line().x(x).y(yWrap)(data)} />\n        )\n}\n\nexport default Line\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\nimport Line from './Line.js'\nimport './TimeSeries.css'\n\nconst TimeSeries = ({\n        data = [],\n        x = el => el.x,\n        opts = {},\n        children,\n        size=10000\n    }) => {\n        const xScale = scaleLinear().range([0,400]).domain(extent(data.slice(data.length-size,data.length), x))\n        const xWrap = (el) => xScale(x(el))\n        return (\n            <svg viewBox={opts.viewBox || \"-10 -1 410 110\"}>\n                {React.Children.map(children, (child,i) => {\n                    return React.cloneElement(child, {data: data.slice(data.length-size,data.length), x:xWrap})\n            })}\n            </svg>\n        )\n}\n\nexport default TimeSeries\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\n\nimport './JoystickPlot.css'\n\nconst JoyPlot = ({\n        data = [],\n        x = el => el.x,\n        y= el => el.y,\n        color = 'darkred',\n        opts = {}\n    }) => {\n        const xScale = scaleLinear().range([-10,10]).domain([-10,10])\n        const yScale = scaleLinear().range([-10,10]).domain([-10,10])\n        const xWrap = (el) => xScale(x(el))\n        const yWrap = (el) => yScale(y(el))\n\n        if(data[data.length -1]===undefined){\n        return (\n        <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n        <rect  x='-40%' y='-40%' width=\"80%\" height=\"80%\" strokeWidth='.1' stroke='black' fill='none'/>\n        </svg>\n      )\n      }\n        return (\n            <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n            <rect  x='-40%' y='-40%' width=\"80%\" height=\"80%\" strokeWidth='.1' stroke='black' fill='none'/>\n            <circle cx = {8*xWrap(data[data.length -1])} cy = {8*yWrap(data[data.length -1])} r ={1.3} style={{fill: color}}/>\n            </svg>\n        )\n\n}\n\nexport default JoyPlot\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\n\nimport './JoystickPlot.css'\n\nconst RotationPlot = ({\n        data = [],\n        x = el => el.x,\n        y = el => el.y,\n        color = 'darkred',\n        opts = {}\n    }) => {\n        const xScale = scaleLinear().range([0,3]).domain([-3,3])\n        const xWrap = (el) => x(el)\n        if(data[data.length-1]===undefined){\n        return (\n        <svg viewBox={opts.viewBox || \"-1 -1 2 2\"}>\n        </svg>\n      )\n      }\n        return (\n        <svg viewBox={opts.viewBox || \"-3 -3 6 6\"}>\n        <line x0='0' y0='0' x1={3*(Math.cos(xWrap(data[data.length-1])+1.57))} y1={3*(Math.sin(xWrap(data[data.length -1])-1.57))} stroke='black' strokeWidth='.1'/>\n        </svg>\n      )\n\n\n}\n\nexport default RotationPlot\n","import React from 'react';\nimport Select from 'react-select';\nimport { PropTypes } from 'react';\nconst axios = require('axios');\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass FileLister extends React.Component{\n  state = {\n    selectedOption: null,\n    options: []\n  }\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n    this.props.onChange(selectedOption)\n  }\ncomponentDidMount(){\n  axios.get('http://localhost:3001/listfiles').\n                               then((data) => {\n                                 this.setState({options:data.data.map((v) => {return {value: v, label: v}})})}).\n                               catch((error) => {\n                                  console.log(error);\n                                })\n                              }\n\n  render() {\n    const { selectedOption } = this.state;\n    console.log(this.state.options)\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={this.state.options}\n      />\n    );\n  }\n}\n\nexport default FileLister\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\n\nimport './HasPiece.css'\n\nconst HasPiece = ({\n        data = [],\n        sensor = el => el.sensor,\n        opts = {}\n    }) => {\n        if(data[data.length-1]===undefined)\n        {\n          console.log(\"Undefined\")\n          return (\n          <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n          <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='black'/>\n          </svg>\n          )\n        }\n        else if(sensor(data[data.length-1])[1] == 1){\n\n        if(sensor(data[data.length-1])[10] == 1 ||\n                  sensor(data[data.length-1])[11] == 1 ||\n                  sensor(data[data.length-1])[12] == 1 ||\n                  sensor(data[data.length-1])[13] == 1){\n                    return(\n                    <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n                    <rect  x='-40%' y='-40%' width=\"50%\" height=\"50%\" strokeWidth='.1' stroke='none' fill='orange'/>\n                    <rect  x='-20%' y='-20%' width=\"50%\" height=\"50%\" strokeWidth='.1' stroke='none' fill='yellow'/>\n                    </svg>\n                  )\n                  }\n          else{\n        return (\n            <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n            <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='orange'/>\n            </svg>\n        )\n      }\n      }\n      else if(sensor(data[data.length-1])[10] == 1 ||\n              sensor(data[data.length-1])[11] == 1 ||\n              sensor(data[data.length-1])[12] == 1 ||\n              sensor(data[data.length-1])[13] == 1){\n      return (\n          <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n          <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='yellow'/>\n          </svg>\n      )\n      }\n      else{\n        return (\n        <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n        <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='black'/>\n        </svg>\n        )\n      }\n\n\n}\n\nexport default HasPiece\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\n\nimport './HasPiece.css'\n\nconst ClimbSafe = ({\n        data = [],\n        sensor = el => el.sensor,\n        opts = {}\n    }) => {\n        if(data[data.length-1]===undefined)\n        {\n          console.log(\"Undefined\")\n          return (\n          <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n          <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='black'/>\n          </svg>\n          )\n        }\n        if(sensor(data[data.length-1])[3] == 1 || sensor(data[data.length-1])[4] == 1){\n\n        return (\n            <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n            <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='green'/>\n            </svg>\n        )\n      }\n        else{\n        return (\n        <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n        <rect  x='-40%' y='-40%' width=\"100%\" height=\"100%\" strokeWidth='.1' stroke='none' fill='black'/>\n        </svg>\n        )\n      }\n\n\n}\n\nexport default ClimbSafe\n","import React from 'react'\nimport {scaleLinear} from 'd3-scale'\nimport {line} from 'd3-shape'\nimport {extent} from 'd3-array'\n\nimport './JoystickPlot.css'\n\nconst BigNumber = ({\n        data = [],\n        number = el => el.number,\n        opts = {}\n    }) => {\n\n        if(data[data.length -1]===undefined){\n        return (\n        <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n        <text x=\"0\" y=\"10\">-1</text>\n        </svg>\n      )\n    }else if(data[data.length-1] == true){\n      return(\n      <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n      <text x=\"0\" y=\"8\">{1}</text>\n      </svg>\n      )\n    }else if(data[data.length-1] == false){\n      return(\n      <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n      <text x=\"0\" y=\"8\">{0}</text>\n      </svg>\n    )\n    }\n    else{\n        return (\n            <svg viewBox={opts.viewBox || \"-10 -10 20 20\"}>\n            <text x=\"0\" y=\"8\">{number(data[data.length-1])}</text>\n            </svg>\n        )\n}\n}\n\nexport default BigNumber\n","import React from 'react';\nimport Subscribe from './Subscription';\nimport XYPlot from './XYPlot';\nimport TimeSeries from './TimeSeries';\nimport Line from './Line';\nimport JoyPlot from './JoystickPlot';\nimport RotationPlot from './RotationPlot';\nimport HasPiece from './HasPiece';\nimport ClimbSafe from './ClimbSafe';\nimport BigNumber from './BigNumber';\nconst VisBoard = ({topics}) => {\n\nreturn(\n<React.Fragment>\n    {topics.map((param, i) => {\n      switch(param.visType){\n      case \"TimeSeries\": {\n      return(\n      <div className=\"col-half col\">\n        <Subscribe type={param.type} topic = {param.topic}>\n            <TimeSeries x ={param.x}  size={param.size}>\n              <Line y = {param.y} color={param.color}/>\n            </TimeSeries>\n        </Subscribe>\n      </div>\n    )\n  }\n    case \"JoystickPlot\":\n    {\n      return(\n      <div className=\"square-col-half nogreycol\">\n      <Subscribe type={param.type} topic = {param.topic}>\n          <JoyPlot x={param.x} y={param.y} color = {param.color}/>\n      </Subscribe>\n      </div>\n    )\n   }\n   case \"XYPlot\":\n   {\n     return(\n     <div className=\"square-col-half col\">\n     <Subscribe type={param.type} topic = {param.topic}>\n         <XYPlot x={param.x} y={param.y} color = {param.color}/>\n     </Subscribe>\n     </div>\n   )\n  }\n  case \"RotationPlot\":\n  {\n    return(\n    <div className=\"square-col-half nogreycol\">\n    <Subscribe type={param.type} topic = {param.topic}>\n        <RotationPlot x={param.x} y={param.y} color = {param.color}/>\n    </Subscribe>\n    </div>\n  )\n }\n case \"HasPiece\":\n {\n   return(\n   <div className=\"square-col-half nogreycol\">\n   <Subscribe type={param.type} topic = {param.topic}>\n       <HasPiece sensor= {param.sensor}/>\n   </Subscribe>\n   </div>\n )\n}\ncase \"ClimbSafe\":\n{\n  return(\n  <div className=\"square-col-half nogreycol\">\n  <Subscribe type={param.type} topic = {param.topic}>\n      <ClimbSafe sensor= {param.sensor}/>\n  </Subscribe>\n  </div>\n)\n}\ncase \"BigNumber\":\n{\n  return(\n  <div className=\"square-col-half nogreycol\">\n  <Subscribe type={param.type} topic = {param.topic}>\n      <BigNumber number = {param.number}/>\n  </Subscribe>\n  </div>\n)\n}\n }\n })\n\n\n\n}\n\n </React.Fragment>\n\n);\n\n}\n\nexport default VisBoard\n","import React, { useContext } from 'react'\nimport { useList } from 'react-hooks-lib'\nimport { ROSContext } from '../ros/context'\n\nconst Service = ({topic, type, children}) => {\n    const { ros } = useContext(ROSContext)\n    // This creates a list of datapoints\n    // list:data renames the list key to data\n    return React.Children.map(children, child => {\n        return React.cloneElement(child, {ros: ros.client})\n    })\n\n}\nexport default Service\n","import ROSLIB from 'roslib'\nimport React, { useContext } from 'react'\nimport { useList } from 'react-hooks-lib'\n// import { ROSContext } from '../ros/context'\n\nconst ServiceCallGyro = ({ros}) => {\n\nconst fieldOrient = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/teleop/robot_orient',\n        serviceType : 'teleop_joystick_control/RobotOrient'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        robot_orient : false, offset_angle: 0\n    });\n\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('fieldOrient') });\n\n}\nconst navFieldOrient = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/frcrobot_rio/navx_offset_controller/navX_offset_service',\n        serviceType : 'navx_offset_controller/NavXSrv'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        value : -10000\n    });\n\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('fieldOrient') });\n\n}\nconst navConstantZero = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/frcrobot_rio/navx_offset_controller/navX_offset_service',\n        serviceType : 'navx_offset_controller/NavXSrv'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        value : 0\n    });\n\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('fieldOrient') });\n\n}\nconst navConstantNinety = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/frcrobot_rio/navx_offset_controller/navX_offset_service',\n        serviceType : 'navx_offset_controller/NavXSrv'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        value : -1.57\n    });\n\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('fieldOrient') });\n\n}\nconst robotOrient = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/teleop/robot_orient',\n        serviceType : 'teleop_joystick_control/RobotOrient'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        robot_orient : true, offset_angle: 0\n    });\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('constantZero') });\n\n}\nconst zeroinFieldOrient = () => {\n\n  navConstantZero()\n  navConstantZero()\n  navConstantZero()\n  setTimeout(navFieldOrient(),5000)\n  setTimeout(navFieldOrient(),5000)\n  setTimeout(navFieldOrient(),5000)\n}\nconst ninetyInFieldOrient = () => {\n\n  navConstantNinety()\n  navConstantNinety()\n  navConstantNinety()\n  setTimeout(navFieldOrient(),5000)\n  setTimeout(navFieldOrient(),5000)\n  setTimeout(navFieldOrient(),5000)\n}\n\nreturn(\n  <div>\n  <button onClick={robotOrient}>\n    Robot Orient\n  </button>\n  <button onClick={fieldOrient}>\n    Field Orient\n  </button>\n  <button onClick={zeroinFieldOrient}>\n    Zero in Field Orient\n  </button>\n  <button onClick={ninetyInFieldOrient}>\n    90 Degree Zero in Field Orient\n  </button>\n  </div>\n)\n}\n\nexport default ServiceCallGyro;\n","import ROSLIB from 'roslib'\nimport React, { useContext } from 'react'\nimport { useList } from 'react-hooks-lib'\n// import { ROSContext } from '../ros/context'\n\nconst ServiceCallClimb = ({ros}) => {\n\nconst climb2 = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/elevator/level_two_climb_server',\n        serviceType : 'std_srvs/Bool'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        data : true\n          });\n\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('Set for lvl2 climb') });\n\n}\nconst climb3 = () => {\n\n  var addTwoIntsClient = new ROSLIB.Service({\n        ros : ros,\n        name : '/elevator/level_two_climb_server',\n        serviceType : 'std_srvs/Bool'\n    });\n\n      var request = new ROSLIB.ServiceRequest({\n        data: false\n    });\n\n      addTwoIntsClient.callService(request, function(result) {\n        console.log('Set for lvl3 climb') });\n\n}\n\n\nreturn(\n  <div>\n  <button onClick={climb2}>\n    Set for climb 2\n  </button>\n  <button onClick={climb3}>\n    Set for climb 3\n  </button>\n  </div>\n)\n}\n\nexport default ServiceCallClimb;\n","import ROSLIB from 'roslib'\nimport React, { useContext } from 'react'\nimport { useList } from 'react-hooks-lib'\n// import { ROSContext } from '../ros/context'\n\nclass Input extends React.Component {\n\nconstructor(props) {\n          super(props);\n          this.state = {\n            value: 0\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n}\nhandleChange(event) {\n  this.setState({value: event.target.value});\n}\nhandleSubmit(event) {\n\n    console.log('New zero value updated: ' + parseInt(this.state.value))\n    event.preventDefault();\n    return this.state.value\n}\n\nrender() {\nreturn(\n  <form onSubmit={this.handleSubmit}>\n      <label>\n        test:\n        <textarea value={this.state.value} onChange={this.handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n</form>\n);\n}\n}\n\nexport default Input;\n","import React from 'react';\nimport Status from './ros/status';\nimport Odometry from './views/nav_msgs/Odometry';\nimport \"react-vis/dist/style.css\";\nimport './App.css';\nimport Subscribe from './util/Subscription';\nimport XYPlot from './util/XYPlot';\nimport TimeSeries from './util/TimeSeries';\nimport Line from './util/Line';\nimport JoyPlot from './util/JoystickPlot.js';\nimport RotationPlot from './util/RotationPlot';\nimport Select from 'react-select';\nimport FileLister from \"./util/fileList\";\nimport VisBoard from './util/BoardSelector';\nimport Service from './util/Service';\nimport ServiceCallGyro from './util/ServiceCallGyro'\nimport ServiceCallClimb from './util/ServiceCallClimb'\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Button, ButtonToolbar, ButtonGroup } from 'react-bootstrap';\nimport Input from './util/Form';\nconst axios = require('axios');\n\nexport default () => {\n  return (\n    <Router>\n    <div className = \"FullContainer\">\n    <div className = \"toprow\">\n    <div className=\"col-half col\">\n\n      <Link to=\"/\">\n      <button>Home</button>\n      </Link>\n\n      <Link to=\"/liverobot\">\n      <button>Live Robot</button>\n      </Link>\n\n      <Link to=\"/pidtuning\">\n      <button>PID Tuning</button>\n      </Link>\n\n      <Link to=\"/driverstation\">\n      <button>Driver Station</button>\n      </Link>\n\n      <Link to=\"/test\">\n      <button>Test</button>\n      </Link>\n\n     </div>\n     <div className=\"col-half col\">\n      <div className=\"NavBarContainer\">\n            <Status/>\n            <button onClick={() => axios.get('http://localhost:3001/dockerstart').\n                                       then(function(data){\n                                         console.log(data.data)}).\n                                       catch(function (error) {\n                                          console.log(error);\n                                        })}>\n              Start Docker Container\n            </button>\n            <button onClick={() => axios.get('http://localhost:3001/dockerkillall').\n                                       then(function(data){\n                                         console.log(data.data)}).\n                                       catch(function (error) {\n                                          console.log(error);\n                                        })}>\n              Kill Docker Container\n            </button>\n\n          </div>\n        </div>\n        </div>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/liverobot\" component={LiveRobot} />\n        <Route path=\"/pidtuning\" component={PIDTuning} />\n        <Route path=\"/driverstation\" component={DriverStation} />\n        <Route path=\"/test\" component={Test} />\n        </div>\n    </Router>\n  );}\nfunction PIDTuning(){\n  return(\n    <div className=\"AppContainer\">\n    <div>\n    <div className=\"windowrow\">\n  <div className=\"col-full col\">\n    <Subscribe type={\"talon_state_controller/TalonState\"} topic = {\"/frcrobot_jetson/talon_states_throttled\"}>\n        <TimeSeries x ={l => l.header.seq}  y={[(l) => l.set_point[1],(l) => l.position[1],(l) => l.closed_loop_error[1]]} size={10000}/>\n    </Subscribe>\n  </div>\n  </div>\n  </div>\n  </div>\n)\n}\nfunction Home() {\n  return(\n    <p>Base Page</p>\n  )\n}\nfunction DriverStation(){\n  return(\n    <div className=\"AppContainer\">\n    <div className='driverstationrow'>\n    <Service>\n      <ServiceCallGyro/>\n    </Service>\n    <Service>\n      <ServiceCallClimb/>\n    </Service>\n    <VisBoard topics={[{\n      visType: \"HasPiece\",\n      name: \"Graph 1\",\n      type: \"sensor_msgs/JointState\",\n      topic: \"/frcrobot_jetson/joint_states\",\n      sensor: l => l.position\n    },{\n      visType: \"BigNumber\",\n      name: \"Graph 1\",\n      type: \"std_msgs/Int8\",\n      topic: \"/teleop/elevator_setpoint\",\n      number: l => l.data\n    },{\n      visType: \"RotationPlot\",\n      name: \"Graph 1\",\n      type: \"std_msgs/Float64\",\n      topic: \"/align_server/navX_pid/setpoint\",\n      x: l => l.data,\n      color: [\"red\"],\n      size: 10000\n  },{\n      visType: \"RotationPlot\",\n      name: \"Graph 1\",\n      type: \"std_msgs/Float64\",\n      topic: \"/align_server/navX_pid/state\",\n      x: l => l.data,\n      color: [\"red\"],\n      size: 10000\n},{\n      visType: \"ClimbSafe\",\n      name: \"Graph 1\",\n      type: \"sensor_msgs/JointState\",\n      topic: \"/frcrobot_jetson/joint_states\",\n      sensor: l => l.position\n},{\n  visType: \"BigNumber\",\n  name: \"Graph 1\",\n  type: \"std_msgs/Bool\",\n  topic: \"/elevator/level_two\",\n  number: l => l.data\n}]}/>\n    </div>\n    </div>\n  )\n}\nfunction Test(){\n  return (\n\n    <div className=\"AppContainer\">\n    <Subscribe type=\"sensor_msgs/JointState\" topic=\"/frcrobot_jetson/joint_states\">\n      <Odometry/>\n    </Subscribe>\n    <Input/>\n    </div>\n  )\n}\nfunction LiveRobot() {\n  return (\n\n    <div className=\"AppContainer\">\n\n      <div className='windowrow'>\n\n      <VisBoard topics={[{\n            visType: \"JoystickPlot\",\n            name: \"Graph 1\",\n            type: \"frc_msgs/JoystickState\",\n            topic: \"/teleop/translator0/joystick_states\",\n            x: l => l.leftStickX,\n            y: l => l.leftStickY,\n            color: [\"red\"],\n            size: 10000\n      },{\n            visType: \"JoystickPlot\",\n            name: \"Graph 1\",\n            type: \"frc_msgs/JoystickState\",\n            topic: \"/teleop/translator0/joystick_states\",\n            x: l => l.rightStickX,\n            y: l => l.rightStickY,\n            color: [\"red\"],\n            size: 10000\n      },{\n          visType: \"TimeSeries\",\n          name: \"Graph 1\",\n          type: \"nav_msgs/Odometry\",\n          topic: \"/frcrobot_jetson/odometry/filtered\",\n          x: l => l.pose.pose.position.x,\n          y: l => l.pose.pose.position.y,\n          color: [\"red\"],\n          size: 10000\n        },\n        {\n          visType: \"TimeSeries\",\n          name: \"Graph 2\",\n          type: \"talon_state_controller/TalonState\",\n          topic: \"/frcrobot_jetson/talon_states_throttled\",\n          x: l => l.header.seq,\n          y: l => Math.abs(l.speed[3]-l.speed[5]),\n          color: [\"darkred\"],\n          size: 1000\n      },\n    {\n        visType: \"TimeSeries\",\n        name: \"Graph 1\",\n        type: \"talon_state_controller/TalonState\",\n        topic: \"/frcrobot_jetson/talon_states_throttled\",\n        x: l => l.header.seq,\n        y: l => Math.abs(l.speed[5]),\n        color: [\"red\"],\n        size: 1000\n      },\n      {\n        visType: \"TimeSeries\",\n        name: \"Graph 2\",\n        type: \"talon_state_controller/TalonState\",\n        topic: \"/frcrobot_jetson/talon_states_throttled\",\n        x: l => l.header.seq,\n        y: l => Math.abs(l.speed[4]),\n        color: [\"darkred\"],\n        size: 1000\n    },\n    {\n        visType: \"TimeSeries\",\n        name: \"Graph 4\",\n        type: \"nav_msgs/Odometry\",\n        topic: \"/frcrobot_jetson/swerve_drive_controller/odom\",\n        x: l => l.pose.pose.position.x,\n        y: l => l.pose.pose.position.y,\n        color: ['darkred']\n  }\n      ]}/>\n\n        </div>\n      </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}